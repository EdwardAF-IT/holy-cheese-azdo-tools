parameters:
  - name: sourceVersion
    type: string
  - name: targetVersion
    type: string
  - name: failOnMismatch
    type: boolean
    default: true

steps:
- download: current
  artifact: manifest

- task: PowerShell@2
  displayName: 'Compare Manifests'
  inputs:
    targetType: 'inline'
    script: |
      function Load-Manifest($version) {
        $file = "$(Pipeline.Workspace)/manifest/manifest-$version.json"
        if (!(Test-Path $file)) {
          Write-Error "‚ùå Manifest not found: $file"
          exit 1
        }
        return Get-Content $file | ConvertFrom-Json
      }

      $source = Load-Manifest "${{ parameters.sourceVersion }}"
      $target = Load-Manifest "${{ parameters.targetVersion }}"

      $fields = @("version", "commit", "sourceBranch")
      $mismatch = $false

      foreach ($field in $fields) {
        if ($source.$field -ne $target.$field) {
          Write-Host "‚ùå Mismatch in '$field': source='$($source.$field)', target='$($target.$field)'"
          $mismatch = $true
        } else {
          Write-Host "‚úÖ $field matches: $($source.$field)"
        }
      }

      if ($mismatch -and ${{ parameters.failOnMismatch }}) {
        Write-Error "Manifest mismatch detected. Aborting."
        exit 1
      } elseif ($mismatch) {
        Write-Host "‚ö†Ô∏è Mismatch detected, but continuing as failOnMismatch=false"
      } else {
        Write-Host "üéâ Manifests match. Environments are in sync."
      }
