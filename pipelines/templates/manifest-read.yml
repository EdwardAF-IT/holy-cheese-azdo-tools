parameters:
  - name: manifestPath
    type: string
    default: '$(Pipeline.Workspace)/ProvisionMetadata_Final/manifest.json'
  - name: version
    type: string
    default: 'v0'
  - name: notes
    type: string
    default: 'Auto-generated manifest'
  - name: artifactName
    type: string
    default: 'AzdoTools'

steps:
  - checkout: self
  - task: PowerShell@2
    name: inferContext
    displayName: 'Infer Branch, Commit, Environment'
    inputs:
      targetType: 'inline'
      script: |
        $branch = "$(Build.SourceBranchName)"
        $commit = "$(Build.SourceVersion)"
        $environment = "$(Build.DefinitionName)" -replace '^deploy-', ''
        Write-Host "##vso[task.setvariable variable=branch]$branch"
        Write-Host "##vso[task.setvariable variable=commit]$commit"
        Write-Host "##vso[task.setvariable variable=environment]$environment"

  - task: PowerShell@2
    name: readManifest
    displayName: 'Read Manifest if Exists'
    continueOnError: true
    inputs:
      targetType: 'inline'
      script: |
        if (Test-Path '${{ parameters.manifestPath }}') {
          $json = Get-Content '${{ parameters.manifestPath }}' | ConvertFrom-Json
          Write-Host "##vso[task.setvariable variable=version]$($json.version)"
          Write-Host "##vso[task.setvariable variable=notes]$($json.notes)"
          Write-Host "##vso[task.setvariable variable=artifactPath]$($json.artifactPath)"
        } else {
          Write-Host "Manifest not found. Will generate new one."
          Write-Host "##vso[task.setvariable variable=version]${{ parameters.version }}"
          Write-Host "##vso[task.setvariable variable=notes]${{ parameters.notes }}"
          $artifactPath = "$(Pipeline.Workspace)/${{ parameters.artifactName }}/drop.zip"
          Write-Host "##vso[task.setvariable variable=artifactPath]$artifactPath"
        }
