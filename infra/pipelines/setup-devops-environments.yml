trigger:
  branches:
    include:
      - main
  paths:
    include:
      - infra/pipelines/setup-devops-environments.yml

pool:
  vmImage: 'windows-latest'

jobs:
- job: CreateEnvironments
  displayName: 'Environment Provisioning via REST API'
  steps:
  - task: AzureCLI@2
    displayName: 'Create Environments via REST API'
    inputs:
      azureSubscription: 'HolyCheese-ServiceConnection'
      scriptType: 'ps'
      scriptLocation: 'inlineScript'
      inlineScript: |
        $org = "techwavellc"
        $project = "holy-cheese"
        $envNames = @(
          'AzdoTools-Shared',
          'AzdoTools-Development',
          'AzdoTools-Test'
        )

        $headers = @{
          Authorization = "Bearer $env:AZURE_DEVOPS_EXT_PAT"
          "Content-Type" = "application/json"
        }

        foreach ($envName in $envNames) {
          Write-Host "Checking if environment '$envName' exists..."

          $checkUrl = "https://dev.azure.com/$org/$project/_apis/distributedtask/environments?api-version=7.1-preview.1"
          $existing = Invoke-RestMethod -Uri $checkUrl -Method Get -Headers $headers
          $exists = $existing.value | Where-Object { $_.name -eq $envName }
          write-host "Check URL: $checkUrl"
          write-host "Existing environments: $($existing.value | ForEach-Object { $_.name } | Out-String)"

          if (-not $exists) {
            Write-Host "Creating environment '$envName'..."
            $body = @{ name = $envName; type = "generic" } | ConvertTo-Json
            Invoke-RestMethod -Uri $checkUrl -Method Post -Headers $headers -Body $body
          }
          else {
            Write-Host "Environment '$envName' already exists."
          }
        }
      enableScriptsAccessOption: true
    env:
      AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
